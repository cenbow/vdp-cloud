##########################################################
################## 1 all profile share config  ############
##########################################################

######  热部署相关配置  ###################
#热部署生效
spring.devtools.restart.enabled=true
#设置重启的目录,添加那个目录的文件需要restart
spring.devtools.restart.additional-paths=src/main/java
# 为mybatis设置，生产环境可删除
restart.include.mapper=/mapper-[\\w-\\.]+jar
restart.include.pagehelper=/pagehelper-[\\w-\\.]+jar
#排除那个目录的文件不需要restart
#spring.devtools.restart.exclude=static/**,public/**
#classpath目录下的WEB-INF文件夹内容修改不重启
#spring.devtools.restart.exclude=WEB-INF/**

###### 容器功能相关配置 #################
containerConfig:
  transferService: 
    enabled: false
    tool: rabbitmq
  memory: 
    enabled: true
    tool: redis
  storage: 
    enabled: true
    tool: mysql
  archiveConfig: 
    enabled: false
    tool: mongodb
  
###### spring config  ###################

spring:
  profiles:
    active: development
  ####redis配置
  redis:
  	model: single  ##single,sharded,cluster
  	clusterNodes: 192.168.3.205:7001,192.168.3.205:7002,192.168.3.205:7003,192.168.3.205:7004,192.168.3.205:7005,192.168.3.205:7006
  	commandTimeout: 30
    password: wtx
    expireSeconds: 120
    soTimeout: 60000
    maxAttempts: 3
    maxTotal: 100
    maxIdle: 40
    minIdle: 20
    maxWaitMillis: 3000
  rabbitmq:
    address: 192.168.3.19
    username: admin
    password: admin
    publisherConfirms: false
    virtualHost: /
    queueNames:
      ##"transferQ: topic.scdata.SC.VLR_EVENT"我们定义为队列转发规则
      ##格式为:"exchange类型.数据类型.生产者.消费者", "数据类型"作为exchange, "生产者.消费者"作为routeKey,  整个作为queue名称, "-"是配置文件中的格式, 请忽略
      ##冒号前面的"transferQ"我们可以定义为"queueKey", 在队列的发送端, 通过调用"Producer"类的send方法时指定, 指定后,就确定了队列的转发规则"topic.scdata.SC.VLR_EVENT"
      transferQ: topic.scdata.SC.VLR_EVENT
      defaultQ: topic.defaultQ.defaultE.defaultK
    
    
### mybatis-plus config  #################

---
##########################################################
################### 2 development profile  ################
##########################################################
spring:
  profiles: development
server:
  port: 8081

---

##########################################################
################### 3 production profile  #################
##########################################################
spring:
  profiles: production
server:
  port: 8080